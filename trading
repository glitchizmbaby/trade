local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local PLACE_ID = 127742093697776

-- PlaceId check
if game.PlaceId ~= PLACE_ID then
    warn("This script cannot be run in this place! Wrong PlaceId.")
    return
end

local PetConfig = require(ReplicatedStorage:WaitForChild("PetConfig"))

-- Valid keys list in the main script
local validKeys = {
    "KEY1",
    "KEY2",
    "MY-SECRET-KEY",   -- Add as many valid keys as you want here
    "ANOTHERKEY"
}

local function isKeyValid(key)
    for _, vKey in ipairs(validKeys) do
        if vKey == key then
            return true
        end
    end
    return false
end

local function sendMultiplePetsToMultiplePlayers(petNamePatterns, targetPlayerNames)
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local backpack = player:WaitForChild("Backpack")

    for _, petPattern in ipairs(petNamePatterns) do
        for _, toPlayerName in ipairs(targetPlayerNames) do
            while true do
                local petTool = nil
                for _, item in ipairs(backpack:GetChildren()) do
                    if item:IsA("Tool") and string.match(item.Name, petPattern .. "$") then
                        petTool = item
                        break
                    end
                end

                if petTool and petTool.Parent == backpack then
                    for _, tool in ipairs(character:GetChildren()) do
                        if tool:IsA("Tool") and string.match(tool.Name, petPattern .. "$") then
                            tool.Parent = backpack
                        end
                    end

                    petTool.Parent = character

                    local args = {
                        {
                            {
                                Item = petTool,
                                ToGift = toPlayerName
                            },
                            "\021"
                        }
                    }

                    ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))

                    wait(0.5)
                else
                    print("No more pets matching pattern '" .. petPattern .. "' found in Backpack.")
                    break
                end
            end
        end
    end
end

if isKeyValid(PetConfig.Key) then
    print("Key validated, script is running.")
    sendMultiplePetsToMultiplePlayers(PetConfig.Pets, PetConfig.PlayersToGift)
else
    warn("Invalid key! Script will not run.")
    Player:Kick(reason)
end
