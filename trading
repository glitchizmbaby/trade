local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local backpack = player:WaitForChild("Backpack")

-- getgenv vars (external script will define them)
local pets = getgenv().pets or {}
local playersToGift = getgenv().playersToGift or {}
local delayBetweenGifts = getgenv().giftDelay or 0.5

local function sendMultiplePetsToMultiplePlayers(petNamePatterns, targetPlayerNames)
    for _, petPattern in ipairs(petNamePatterns) do
        for _, toPlayerName in ipairs(targetPlayerNames) do
            while true do
                local petTool = nil
                for _, item in ipairs(backpack:GetChildren()) do
                    if item:IsA("Tool") and string.match(item.Name, petPattern .. "$") then
                        petTool = item
                        break
                    end
                end

                if petTool and petTool.Parent == backpack then
                    for _, tool in ipairs(character:GetChildren()) do
                        if tool:IsA("Tool") and string.match(tool.Name, petPattern .. "$") then
                            tool.Parent = backpack
                        end
                    end

                    petTool.Parent = character

                    local args = {
                        {
                            {
                                Item = petTool,
                                ToGift = toPlayerName
                            },
                            "\021"
                        }
                    }

                    ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))

                    task.wait(delayBetweenGifts)
                else
                    break
                end
            end
        end
    end
end

-- Start gifting
sendMultiplePetsToMultiplePlayers(pets, playersToGift)
